<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="dist" name="newrelic_unix_plugin">
    <!-- UPDATE VERSION NUMBER HERE, NOT DIRECTLY IN SRC! -->
	<property name="version" value="3.6.4"/>
	
	<property name="unixagent.file" value="com/chocolatefactory/newrelic/plugins/unix/UnixAgent.java"/>
	<property name="pluginname" value="newrelic_unix_plugin"/>
	<property name="pluginname.long" value="New Relic Unix Plugin"/>
    <property name="filename" value="${pluginname}"/>
    <property name="jarfile" value="${pluginname}.jar"/>
    <property name="tarfile" value="${filename}.tar.gz"/>

    <property name="build.dir" location="bin"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.jar.dir" value="${build.dir}/jar"/>
    <property name="build.tar.dir" value="${build.dir}/tar"/>
    <property name="build.tar.src.dir" value="${build.tar.dir}/${pluginname}"/>

    <property name="dist.dir" location="dist"/>
    <property name="src.dir" location="src"/>
    <property name="lib.dir" location="lib"/>
    <property name="conf.dir" location="config"/>
    <property name="etc.dir" location="etc"/>
    <property name="script.dir" location="."/>
    <property name="newrelic.lib" value="${lib.dir}/metrics_publish-2.0.1.jar"/>
    <property name="json.lib" value="${lib.dir}/json-simple-1.1.1.jar"/>
    <property name="gson.lib" value="${lib.dir}/gson-2.8.1.jar"/>

    <path id="classpath">
        <pathelement location="${build.dir}"/>
        <pathelement location="${newrelic.lib}"/>
        <pathelement location="${json.lib}"/>
        <pathelement location="${gson.lib}"/>
    </path>
	
    <target name="clean">
        <echo>Cleaning project.</echo>
        <delete dir="${build.dir}"/>
        <echo>Done.</echo>
    </target>
    
    <target depends="clean" name="cleanall"/>

    <target name="init" depends="clean">
        <echo>Creating directory: ${build.dir}</echo>
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="compile" depends="init">
    	<echo>Updating version number.</echo>
    	<replaceregexp file="${src.dir}/${unixagent.file}"
    		match="kAgentVersion = .*"
    		replace="kAgentVersion = &quot;${version}&quot;;"
    	/>
    	<echo>Building project.</echo>
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" target="1.6" source="1.6" includeantruntime="false">
            <classpath refid="classpath"/>
        </javac>
        <echo>Done.</echo>
    </target>
	
	<target name="compile-1.7" depends="init">
	    	<echo>Updating version number.</echo>
	    	<replaceregexp file="${src.dir}/${unixagent.file}"
	    		match="kAgentVersion = .*"
	    		replace="kAgentVersion = &quot;${version}&quot;;"
	    	/>
	    	<echo>Building project.</echo>
	        <mkdir dir="${build.classes.dir}"/>
	        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" target="1.7" source="1.7" includeantruntime="false">
	            <classpath refid="classpath"/>
	        </javac>
	        <echo>Done.</echo>
	</target>

    <target name="jar" depends="compile-1.7" description="create a Jar file for the plugin">
        <mkdir dir="${build.jar.dir}"/>
        <tstamp/>
        <jar destfile="${build.jar.dir}/${jarfile}">
            <manifest>
            	<attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Specification-Title" value="${pluginname.long}"/>
                <attribute name="Specification-Vendor" value="The Chocolate Factory"/>
                <attribute name="Implementation-Vendor" value="The Chocolate Factory"/>
                <attribute name="Built-Date" value="${TODAY}"/>
                <attribute name="Specification-Version" value="${version}"/>
                <attribute name="Implementation-Version" value="${version} ${TODAY}"/>
                <attribute name="Main-Class" value="com.chocolatefactory.newrelic.plugins.unix.Main"/>
            </manifest>
            <fileset dir="${build.classes.dir}"/>
       </jar>
    </target>

    <target name="dist" depends="jar" description="create a downloadable file">
        <mkdir dir="${build.tar.src.dir}"/>
    	<mkdir dir="${build.tar.src.dir}/bin"/>
    	<mkdir dir="${build.tar.src.dir}/config"/>
        <mkdir dir="${build.tar.src.dir}/lib"/>
        <mkdir dir="${build.tar.src.dir}/etc"/>
        <copy file="LICENSE" todir="${build.tar.src.dir}" />
        <copy file="README.md" todir="${build.tar.src.dir}" />
        <copy file="pluginctl.sh" todir="${build.tar.src.dir}" />
        <copy todir="${build.tar.src.dir}/config">
            <fileset dir="${conf.dir}" />
        </copy>
        <copy todir="${build.tar.src.dir}/lib">
            <fileset dir="${lib.dir}" />
        </copy>
        <copy todir="${build.tar.src.dir}/etc">
            <fileset dir="${etc.dir}" />
        </copy>
        <copy file="${build.jar.dir}/${jarfile}" todir="${build.tar.src.dir}/bin" />
        <tar compression="gzip" destfile="${dist.dir}/${tarfile}">
        	<tarfileset dir="${build.tar.dir}">
        		<exclude name="*.sh"/>
       		</tarfileset>
        	<tarfileset mode="755" dir="${build.tar.dir}">
        		<include name="*.sh"/>
       		</tarfileset>
        </tar>
     </target>
</project>
